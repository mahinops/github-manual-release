name: Generate Release Tag

description: Create a new tag, generate release notes, and create a GitHub release.

inputs:
  release-tag-number:
    description: 'Enter the release-tag number'
    required: true
    default: 'v1.0.0'
  user-email:
    description: 'Email for Git configuration'
    required: true
  user-name:
    description: 'Name for Git configuration'
    required: true
  github-token:
    description: 'GitHub Token'
    required: true

runs:
  using: "composite"
  steps:
  - name: Checkout Repository
    uses: actions/checkout@v4

  - name: Exit if the branch is not main
    run: |
      if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
        echo "Branch is not main, exiting."
        exit 1
      fi
    shell: bash

  - name: Set Git Config
    run: |
      git config --global user.email "${{ inputs.user-email }}"
      git config --global user.name "${{ inputs.user-name }}"
    shell: bash

  - name: Update Tag
    run: |
      echo "The input value is: ${{ inputs.release-tag-number }}"
      git tag -a ${{ inputs.release-tag-number }} -m "Updating tags"
      git push origin ${{ inputs.release-tag-number }}
    env:
      GITHUB_TOKEN: ${{ inputs.github-token }}
    shell: bash

  - name: Get Previous Tags
    id: previous_tag
    run: |
      tags=$(curl -s -H "Authorization: token ${{ inputs.github-token }}" \
        "https://api.github.com/repos/${{ github.repository }}/tags" \
        | jq -r '.[].name')
      previous_tag=$(echo "$tags" | sort -V | tail -n 2 | head -n 1)
      echo $previous_tag
      echo "PREVIOUS_TAG=$previous_tag" >> $GITHUB_ENV
    env:
      GITHUB_TOKEN: ${{ inputs.github-token }}
    shell: bash

  - name: Generate Release Notes
    run: |
      gh api \
        --method POST \
        -H "Accept: application/vnd.github+json" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        /repos/${{ github.repository }}/releases/generate-notes \
        -f tag_name=${{ inputs.release-tag-number }} \
        -f target_commitish=main \
        -f previous_tag_name=${{ env.PREVIOUS_TAG }} \
        | jq -r '.body' > releaseNote.md
    env:
      GITHUB_TOKEN: ${{ inputs.github-token }}
    shell: bash

  - name: View Release Notes
    run: |
      cat releaseNote.md
    shell: bash

  - name: Create Release
    run: |
      gh release create ${{ inputs.release-tag-number }} -F releaseNote.md
    env:
      GITHUB_TOKEN: ${{ inputs.github-token }}
    shell: bash
